#Ques1

str=input("Enter a sentence/word:")
char=input("Enter the character you want to find the number of occurrences of:")
print(char + " occurs", str.count(char), "times")

#Ques2

date=int(input("Enter date (1-31):"))
if date<1 or date>31:
    print("Please enter a valid date")
month=int(input("Enter Month (1-12):"))
if month<1 or month>12:
    print("Please enter a valid month")
year=int(input("Enter year (1800-2025):"))
if year<1800 or year>2025:
    print("Please enter an year between 1800 and 2025")
#condition for leap year
leap_year=0
if (year%4==0) and (year%100==0) and (year%400!=0):
    pass
elif (year%4==0):
    leap_year=year

if year==leap_year and month==2:
    if 1<=date<=28:
        print("The next date is:", date+1, "/", month, "/", year)
    if date==29:
            print ("The next date is:", 1,"/", 3, "/", year)
        
elif month== (1 or 3 or 5 or 7 or 8 or 10 or 12):
    if 1<=date<=30:
        print("The next date is:", date+1, "/", month, "/", year)
    elif date==31 and month!=12:
        print("The next date is:", 1, "/", month+1, "/", year)
    elif date==31 and month==12:
        print("The next date is:", 1, "/", 1, "/", year+1)
elif month== (4 or 6 or 9 or 11):
    if 1<=date<=29:
        print("The next date is:", date+1, "/", month, "/", year)
    elif date==30:
        print("The next date is:", 1, "/", month+1, "/", year)
elif month==2:
    if 1<=date<=27:
        print("The next date is:", date+1, "/", month, "/", year)
    elif date==28:
        print("The next date is:", 1, "/", month+1, "/", year)
        
#Ques3

list1=[]
k=0
while True:
    a=int(input("1 for continue and 2 for break"))
    if a==1:
        b=int(input("enter number"))
        list1.append(b)
        k=k+1
    else:
        break
tup=[]
for k in list1:
    tup1=(k,k*k)
    tup.append(tup1)
print(tup) 


#Ques4

grade=int(input("Enter Grade points"))
if 10<grade or grade<4:
    print("Please enter a grade between 4 and 10")
elif grade==10:
    print("Your Grade is 'A+' and Outstanding Performance")
elif grade==9:
    print("Your Grade is 'A' and Excellent Performance")
elif grade==8:
    print("Your Grade is 'B+' and Very Good Performance")
elif grade==7:
    print("Your Grade is 'B' and Good Performance")
elif grade==6:
    print("Your Grade is 'C+' and Average Performance")
elif grade==5:
    print("Your Grade is 'C' and Below Average Performance")
elif grade==4:
    print("Your Grade is 'D' and Poor Performance")
    
#Ques5

string = "ABCDEFGHIJK"
j = 0
while len(string)-j*2 >= 1:
    print(" "*j, string[0 : len(string) - j*2])
    j += 1
    
#Ques6

repeat = "Y"
dic = {}
dic2 = {}
list = ["Y", "y", "n", "N"]
while repeat == "Y" or repeat == "y":
    name = str(input("Enter student name:"))
    sid = int(input("Enter student SID:"))
    if sid < 0:
        print("\nError\nSID can't be negative\n")
    else:
        dic.update({sid: name})
        dic2.update({name: sid})
        repeat = str(input("Enter Y to continue or N to end:"))

    if repeat == "N" or repeat == "n":
        break
    elif (not (repeat in list)):
        print("\nError\nPlease enter valid input['Y' or 'N']")
        repeat = str(input("\nEnter Y to continue or N to end:"))

print("\nQ.6(a)")
print("The Dictionary containing {'SID':'Name'} is shown below")
print(dic)
print("\nQ.6(b)")
list_k = sorted(dic2)
dic3 = {}
for ele in list_k:
    dic3.update({dic2.get(ele): ele})
print("The Dictionary after sorting according to name:")
print(dic3)
print("\nQ.6(c)")
sort_dic = sorted(dic)
dic4 = {}
for va in sort_dic:
    dic4.update({va: dic.get(va)})
print("The Dictionary after sorting according to SID:")
print(dic4)
print("\nQ.6(d)")
enter_sid = int(input("Enter SID to get name of student:"))
output_name = str(dic.get(enter_sid))
print(f"Name of student with SID {enter_sid} is {output_name}.")

#Ques7

#input from user
n=int(input("Enter number of elements N in fibonacci series:\n[N must be positive Integer]: N="))
#printing error message when N<=0
if n<=0 :
    print("\nError\nNumber of elements in fibonacci series must be integer and greater than zero.")
#code for fibonacci series
else:
    #code for fibonacci series for first 2 elements
    if n == 1:
        print("\nThe fibonacci series with 1 element is shown below\n[1]")
        print("\nAverage of given fibonacci series is", 1)

    elif n == 2:
        print("\nThe fibonacci series with 2 element is shown below\n[1,1]")
        print("\nAverage of given fibonacci series is", 1)
    #General code for fibonacci for next N-2 elements
    else:
        # List of fibonacci elements with 1,1 as initial elements
        list1 = [1, 1]
        #Building logic to get fibonacci series
        a = 1
        b = 1
        # For loop
        for i in range(n - 2):
            s = a + b
            list1.append(s)
            a = b
            b = s
        # printing the final fibonacci series
        print(f"\nThe fibonacci series with {n} elements is shown below:")
        print(list1)
        # Finding average of fibonacci series
        sum = 0    #intial sum=0
        # finding sum of all elements in list1
        for num in list1:
            sum = sum + num
        average = (sum / n)
        # Till two decimal place
        two_decimal = "{:.2f}".format(average)
        # printing average
        print(f"\nAverage of given fibonacci series is {two_decimal}")


#Ques8

set1= {1, 2, 3, 4, 5}
set2= {2, 4, 6, 8}
set3= {1, 5, 9, 13, 17}

print(f"Set1= {set1}\nSet2= {set2}\nSet3= {set3}")
print("\nQ.8(a)")
print("\nA new Set of all 'elements that are in Set1 and Set2 but not both' is:")
set_sym_dif=set1.symmetric_difference(set2)
print(set_sym_dif)
print("\nQ.8(b)")
print("\nA new set of all elements that are 'in only one of the three sets Set1,Set2 and Set3' is:")
set_u1=set1.union(set2)
set_uf=set_u1.union(set3)
set_i1=set1.intersection(set2)
set_if=set_i1.intersection(set3)
set_12=set1.intersection(set2)
set_23=set2.intersection(set3)
set_13=set1.intersection(set3)
set_f1=set_uf-set_12-set_23-set_13

print(set_f1)
print("\nQ.8(c)")
set_c1=set_12.union(set_23)
set_c2=set_c1.union(set_13)
set_final=set_c2-set_if

print("\nA new set of elements that are 'exactly in two of the sets Set1, Set2 and Set3' is:")
print(set_final)
print("\nQ.8(d)")
set_d={1,2}
set_d.clear()
for i in range(1,11):
  set_d.add(i)
set_new=set_d-set1
print("\nA new set of all Integers in the 'range 1 to 10' that are 'not in Set1' is:")
print(set_new)
print("\nQ.8(e)")
set_e=set_d-set_uf
print("\nA new set of all Integers in the range 1 to 10 that are not in Set1,Set2 and Set3.")
print(set_e)
